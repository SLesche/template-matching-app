function plot_additional_bins(app)
    available_bins = app.nbins;

    % Create a dialog window
    d = dialog('Position', [500 400 320 220], ...
        'Name', 'Additional Bins', ...
        'Color', [0.95 0.95 0.95], ...
        'WindowStyle', 'modal');

    % Title
    uicontrol('Parent', d, ...
        'Style', 'text', ...
        'Position', [30 170 260 25], ...
        'String', 'Enter Bin Numbers to Add', ...
        'FontSize', 12, ...
        'FontWeight', 'bold', ...
        'BackgroundColor', [0.95 0.95 0.95], ...
        'HorizontalAlignment', 'center');

    % Subtitle: number of available bins
    uicontrol('Parent', d, ...
        'Style', 'text', ...
        'Position', [30 150 260 18], ...
        'String', ['Available bins: ', num2str(1:available_bins)], ...
        'FontSize', 10, ...
        'BackgroundColor', [0.95 0.95 0.95], ...
        'HorizontalAlignment', 'center');

    % Bin number label
    uicontrol('Parent', d, ...
        'Style', 'text', ...
        'Position', [20 115 80 20], ...
        'String', 'Bin number(s):', ...
        'FontSize', 10, ...
        'BackgroundColor', [0.95 0.95 0.95], ...
        'HorizontalAlignment', 'right');

    % Bin number input field
    binField = uicontrol('Parent', d, ...
        'Style', 'edit', ...
        'Position', [110 115 170 25], ...
        'FontSize', 10, ...
        'BackgroundColor', 'white', ...
        'TooltipString', 'e.g. [2 3 5]');

    % Example input (below the field, left-aligned)
    example_bins = sprintf('%d ', 1:min(3, available_bins));
    uicontrol('Parent', d, ...
        'Style', 'text', ...
        'Position', [110 90 170 15], ...
        'String', ['e.g. [', strtrim(example_bins), ']'], ...
        'FontSize', 9, ...
        'BackgroundColor', [0.95 0.95 0.95], ...
        'HorizontalAlignment', 'left');

    % OK button
    uicontrol('Parent', d, ...
        'Position', [125 35 70 30], ...
        'String', 'OK', ...
        'FontSize', 10, ...
        'FontWeight', 'bold', ...
        'BackgroundColor', [0.6 0.8 1], ...
        'Callback', @(src, event) onConfirm());

    % Wait for the dialog to close before returning
    uiwait(d);

    % Callback for OK button
    function onConfirm()
        try
            bin_nums = eval(binField.String);

            % Validate input
            if ~isnumeric(bin_nums) || isempty(bin_nums)
                errordlg('Please enter a valid numeric array of bin numbers.', 'Invalid Input');
                return;
            end

            % Remove the current bin
            bin_nums(bin_nums == app.bin_num) = [];

            % Plot the additional bins
            if ~isempty(bin_nums)
                hold(app.erp_display, 'on');

                current_erp = app.erp_num;
                electrodes = app.cfg.electrodes;

                for additional_bin = bin_nums
                    plot( ...
                        app.time_vector, ...
                        squeeze(app.erp_mat(current_erp, electrodes, :, additional_bin)), '--', ...
                        'Color', [0.7, 0.7, 1], ...
                        'Parent', app.erp_display, ...
                        'DisplayName', ['Bin ', num2str(additional_bin)]);
                end

                hold(app.erp_display, 'off');
            end

            uiresume(d);
            delete(d);

        catch
            errordlg('Failed to parse bin numbers. Use format like: [2 3 4]', 'Input Error');
        end
    end
end
